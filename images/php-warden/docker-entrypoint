#!/bin/sh
set -e

# configure php additions.ini
cat /usr/local/etc/php/conf.d/05-additions.ini.template \
  | envsubst '${MAILHOG_HOST} ${MAILHOG_PORT}' \
  | sudo tee /usr/local/etc/php/conf.d/05-additions.ini

# append warden issued root ca cert to ca-bundle trusted by curl/openssl
if [ -f /etc/ssl/warden-rootca-cert/ca.cert.pem ]; then
  sudo cp /etc/ssl/warden-rootca-cert/ca.cert.pem /usr/local/share/ca-certificates/warden-rootca-cert.pem.crt
fi

# update trust outside if condition above to allow mounting PEM files into /etc/pki/ca-trust/source/anchors
sudo update-ca-certificates

# start socat process in background to connect sockets used for agent access within container environment
if [ -s /run/host-services/ssh-auth.sock ] \
  && [ "${SSH_AUTH_SOCK}" != "/run/host-services/ssh-auth.sock" ]
then
  sudo rm -f "${SSH_AUTH_SOCK}"
  sudo bash -c "nohup socat UNIX-CLIENT:/run/host-services/ssh-auth.sock \
    UNIX-LISTEN:${SSH_AUTH_SOCK},fork,user=www-data,group=www-data 1>/var/log/socat-ssh-auth.log 2>&1 &"
fi

# start crond as a background process
sudo service cron start

# install requested node version if not already installed
NODE_INSTALLED="$(node -v | perl -pe 's/^v([0-9]+)\..*$/$1/')";
if [ "${NODE_INSTALLED}" != "${NODE_VERSION}" ] \
  || [ "${NODE_VERSION}" = "latest" ] || [ "${NODE_VERSION}" = "lts" ]
then
  sudo /usr/local/bin/n "${NODE_VERSION}"
fi

# Configure composer2 as default when specified
if [ "${COMPOSER_VERSION:-}" = "2" ]; then
  sudo cp /usr/bin/composer2 /usr/bin/composer
fi

# Resolve permission issues with directories auto-created by volume mounts; to use set CHOWN_DIR_LIST to
# a list of directories (relative to working directory) to chown, walking up the paths to also chown each
# specified parent directory. Example: "dir1/dir2 dir3" will chown dir1/dir2, then dir1 followed by dir3
for DIR in ${CHOWN_DIR_LIST:-}; do
  if [ -d "${DIR}" ]; then
    while :; do
      sudo chown www-data:www-data "${DIR}"
      DIR=$(dirname "${DIR}")
      if [ ${DIR} = "." ] || [ ${DIR} = "/" ] || [ ${DIR} = "/home" ]; then
        break;
      fi
    done
  fi
done

# Resolve permission issue with /var/www being owned by root as a result of volume mounted on php-fpm
# and nginx combined with nginx running as a different uid/gid than php-fpm does. This condition, when it
# surfaces would cause mutagen sync failures (on initial startup) on macOS environments.
sudo chown -R www-data:www-data /var/www

# first arg is `-f` or `--some-option`
if [ "${1#-}" != "$1" ]; then
  set -- php-fpm "$@"
fi

exec "$@"
